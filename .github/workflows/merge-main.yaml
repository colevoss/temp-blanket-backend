name: Merge Main

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

env:
  TEMP_BLANKET_GCP_PROJECT_ID: ${{ secrets.TEMP_BLANKET_GCP_PROJECT_ID }}
  TEMP_BLANKET_GCP_REGION: ${{ secrets.TEMP_BLANKET_GCP_REGION }}
  SYNOPTIC_API_TOKEN: ${{ secrets.SYNOPTIC_API_TOKEN }}
# concurency: deploy

jobs:
  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.docker-build.outputs.digest }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Docker Meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_REPO }}/${{ secrets.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      -
        id: gcp-auth
        name: Login to Google Artifact Registry
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_OPS_SERVICE_ACCOUNT }}

      -
        name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      -
        id: docker-build
        name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    name: Deploy Service
    runs-on: ubuntu-latest
    needs: build-image

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      DOCKER_IMAGE_DIGEST: ${{ secrets.DOCKER_REPO }}/${{ secrets.IMAGE_NAME }}@${{ needs.build-image.outputs.image-digest }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        id: gcp-auth
        name: Login to Google Artifact Registry
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_OPS_SERVICE_ACCOUNT }}

      -
        name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      -
        name: 'Use gcloud CLI'
        run: 'gcloud info'

      -
        uses: hashicorp/setup-terraform@v2

      -
        name: Prepare Development
        run: |
          make prepare-deployment

      -
        name: Terraform Init
        run: |
          make terraform-init

      -
        name: Terraform Plan
        run: |
          make terraform-plan

      -
        name: Terraform Apply!
        run: |
          make terraform-apply

